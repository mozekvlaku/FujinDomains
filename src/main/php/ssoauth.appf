<?php
//GUIAUTH
//status/locked
/**
 * [Fujin AppFramework Graphical Credential Provider (appf)]
 * 
 * Vespotok Fujin Domains Login Daemon for Fujin
 * 
 * Copyright (c) 2022 Vespotok veDev
 * 
 * @package     Raijin
 * @subpackage  CredentialProviders
 * @author      Vespotok veDev - Tomáš Kracík <kracik@vespotok.net>
 */
namespace Net\Vespotok\Fujin\Usr\Share\Raijin\SSOAuth;

use Exception;
use Net\Vespotok\Fujin\Framework\Helper\Customization\icnmaster;
use Net\Vespotok\Fujin\Framework\Helper\Kernel\DependencyManager;
use Net\Vespotok\Fujin\Framework\Helper\Kernel\DependencyType;
use Net\Vespotok\Fujin\Framework\Kernel\GUICredentialProvider;
use Net\Vespotok\Fujin\Framework\UI\Windowing\Window;
use virfs;

class SSOAuth extends GUICredentialProvider {
    const APP_NAME          = "Přihlašovací démon Fujinu s podporou domén";
    const APP_ICON_GROUP    = "status";
    const APP_ICON          = "locked";
    const MULTIPLE_SESSIONS = false;
    const DOMAIN_SERVER     = "http://192.168.31.246:8080/api/v1/";

    protected function hooks(): void
    {
        $resourceman = new DependencyManager($this);
        $resourceman->add_dependency("fjdwm", DependencyType::CSS_JS);
        $this->fn("check_username", function($username) {
            $ch = curl_init(self::DOMAIN_SERVER . "domain?username=" . htmlentities($username));
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
            curl_setopt($ch, CURLOPT_HEADER, 0);
            $data = curl_exec($ch);
            if(!$data)
            {
                $this->endpoint->stdErr("Chyba připojení k doménovému serveru. " . curl_error($ch));
            }
            else
            {
                $this->endpoint->stdOut($data);
            }
            curl_close($ch);
            
        });

        $this->fn("try_login", function ($username, $password, $domain) {
            $ch = curl_init(self::DOMAIN_SERVER . "login?username=" . htmlentities($username) . "&password=" . $password . "&domain=" . $domain);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
            curl_setopt($ch, CURLOPT_HEADER, 0);
            $data = curl_exec($ch);
            if (!$data) {
                $this->endpoint->stdErr("Chyba připojení k doménovému serveru. " . curl_error($ch));
            } else {
                $this->endpoint->stdOut($data);
                if(json_decode($data)->status == "success")
                {
                    $this->get_login_window_welcome(json_decode($data)->user->cn);
                }
            }
            curl_close($ch);
        });

        $this->fn("login", function ($token, $domain) {
            $ch = curl_init(self::DOMAIN_SERVER . "user?token=" .$token . "&type=fujin&domain=" . $domain);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
            curl_setopt($ch, CURLOPT_HEADER, 0);
            $data = curl_exec($ch);
            if (!$data) {
                $this->endpoint->stdErr("Chyba připojení k doménovému serveru. " . curl_error($ch));
            } else {
                $result = json_decode($data);
                if($result->status == "success")
                {
                    $this->login($result->user);
                    $this->get_window("main")->close();
                    $this->endpoint->javascript("ssoauth_dn", "loginOk(); /** ".rand(100,888)." */");
                }
                else
                {
                    $this->endpoint->stdErr("Při přihlašování se stala chyba. Kontaktujte administrátora sítě.");
                }
            }
            curl_close($ch);

        });

        $this->ms("checkLogin", function(){
            $this->endpoint->tm->killAll("ssoauth.appf");
            $this->endpoint->tm->killAll("ssoauth");
            $this->endpoint->tm->killAll("auth");


            $this->start_apps();
            $this->endpoint->syscall();
        });
    }

    private function login($data):void
    {
        $data = (array) $data;
        $_SESSION["FJACC_SETTINGS"] = $data;
        $_SESSION["FJACC_SETTINGS"]["LOGGED_IN"] = true;
        $_SESSION["fjx_current_user_groups"] = explode(",", $data["USERGROUPS"]);
        $_SESSION["fjx_current_user_username"] = $data["USERNAME"];
        $_SESSION["fjx_current_user_fjid"] = $data["FJID"];
        if(isset($data["FUJIN_HOME"]))
        {
            $_SESSION["fjfd_currdir"] = $data["FUJIN_HOME"];
            $_SESSION["fjx_home_directory_root"] = $_SESSION["fjx_root"] . $data["FUJIN_HOME"];
            $_SESSION["fjx_home_directory_path"] = $_SESSION["fjx_path"] . $data["FUJIN_HOME"];
        }
        else 
        {
            $_SESSION["fjfd_currdir"] = "/home/" . $data["USERNAME"];
            $_SESSION["fjx_home_directory_root"] = $_SESSION["fjx_root"] . "/home/" . $data["USERNAME"];
            $_SESSION["fjx_home_directory_path"] = $_SESSION["fjx_path"] . "/home/" . $data["USERNAME"];
        }

        if(!isset($data["SH"]) || $data["SH"] != "")
        {
            $_SESSION["SH"] = "/bin/sh";
        }
        if (!isset($data["GUI"]) || $data["GUI"] != "") {
            $_SESSION["GUI"] = "/usr/share/raijin/raijin.appf";
        }

        if (!is_dir($_SESSION["fjx_root"] . $_SESSION["fjfd_currdir"])) {
            mkdir($_SESSION["fjx_root"] . $_SESSION["fjfd_currdir"]);
            mkdir($_SESSION["fjx_root"] . $_SESSION["fjfd_currdir"] . "documents/");
            mkdir($_SESSION["fjx_root"] . $_SESSION["fjfd_currdir"] . "photos/");
            mkdir($_SESSION["fjx_root"] . $_SESSION["fjfd_currdir"] . "etc/");
            mkdir($_SESSION["fjx_root"] . $_SESSION["fjfd_currdir"] . "music/");
            mkdir($_SESSION["fjx_root"] . $_SESSION["fjfd_currdir"] . "public/");
            $this->endpoint->stdOut("Byl vám vytvořen nový profil");
        }
    }

    private function start_apps()
    {

        $usr_sh = $_SESSION["FJACC_SETTINGS"]["SH"];

        $usr_gui = $_SESSION["FJACC_SETTINGS"]["GUI"];
        $te0 = $this->endpoint->tm->taskExists("sh", "stdout");
        if ($te0 == false) {
            $this->endpoint->tm->startTask($usr_sh, "", false, true, "stdout", 1);
        } else {
            $_SESSION["fjx_currentTask"]["stdout"] = $te0;
        }

        $te1 = $this->endpoint->tm->taskExists("sh", "tty0");
        if ($te1 == false) {
            $this->endpoint->tm->startTask($usr_sh, "loaad", false, true, "tty0", 1);
        } else {
            $_SESSION["fjx_currentTask"]["tty0"] = $te1;
        }

        $te2 = $this->endpoint->tm->taskExists("sh", "tty1");
        if ($te2 == false) {
            $this->endpoint->tm->startTask($usr_sh, "loaad", false, true, "tty1", 1);
        } else {
            $_SESSION["fjx_currentTask"]["tty1"] = $te2;
        }

        $te3 = $this->endpoint->tm->taskExists("sh", "tty2");
        if ($te3 == false) {
            $this->endpoint->tm->startTask($usr_sh, "loaad", false, true, "tty2", 1);
        } else {
            $_SESSION["fjx_currentTask"]["tty2"] = $te3;
        }

        $te4 = $this->endpoint->tm->taskExists("sh", "tty3");
        if ($te4 == false) {
            $this->endpoint->tm->startTask($usr_sh, "loaad", false, true, "tty3", 1);
        } else {
            $_SESSION["fjx_currentTask"]["tty3"] = $te4;
        }
        $graphics_bin_arr = explode("/", $_SESSION["FJACC_SETTINGS"]["GUI"]);
        $graphics_bin = $graphics_bin_arr[count($graphics_bin_arr)];
        $te5 = $this->endpoint->tm->taskExists($graphics_bin, "jsd0");
        if ($te5 == false) {
            $this->endpoint->tm->startTask($usr_gui . "", "ui", false, true, "jsd0", 1);
        } else {
            $_SESSION["fjx_currentTask"]["jsd0"] = $te5;
        }

    }

    protected function get_wallpaper(): void
    {
        $this->endpoint->stdOut("<div class='rj_underwallpaper animate__animated animate__fadeIn animate__delay-0s is-hidden-mobile' style='background-image: url(&quot;" . $_SESSION["fjx_path"] . $_SESSION["fjx_raijin"]->wallpaper . "&quot;)'></div><div class='rj_underwallpaper animate__animated animate__fadeIn animate__delay-0s is-hidden-tablet' style='background-color: var(--window-content)'></div>");
        $icons = new icnmaster();
        $controls = "
            minimizable: false,
            maximizable: false,
            movable: false,
            resizable: false,
            close_icon: '',
        ";
        $this->add_window(new Window($this->endpoint, $this->pid, "main", true, "Přihlášení k Fujinu", $icons->getToolIcon("status", "locked", "horizontal", true), $controls, 600, 350));
        
    }
    protected function get_user_interface(): void
    {
        $this->endpoint->stdOut($this->get_basic_ui_elements());
    }

    protected function try_login(): void
    {
         $this->get_window("main")->close();
    }

    protected function get_login_window(): void
    {
        $contents = $this->get_login_header();
        $contents .= '<div style="height:10px"></div>
        <div class="columns is-centered is-gapless is-marginless is-vcentered">
            <div class="column is-one-quarter">Uživatelské jméno:</div>
            <div class="column is-half">
                <input class="input" id="domains_username">
            </div>
        </div>
        <div style="height:10px"></div>
        <div class="columns is-centered is-gapless is-marginless is-vcentered">
            <div class="column is-one-quarter">Heslo:</div>
            <div class="column is-half">
                <input class="input" type="password" id="domains_password">
            </div>
        </div>
        <div style="height:10px"></div>
        <div class="columns is-centered is-gapless is-marginless is-vcentered">
            <div class="column is-one-quarter">Doména:</div>
            <div class="column is-half">
                <input class="input" id="domains_domainname" disabled placeholder="Bude načtena z přihlašovacího jména">
            </div>
        </div>
        <div style="height:10px"></div>
        <div class="columns is-centered is-gapless is-marginless is-vcentered">
            <div class="column is-half has-text-danger">
                <p class="is-hidden" id="not_existing_domain">Tato doména neexistuje</p>
                <p class="is-hidden" id="bad_password">Špatné heslo</p>
                <p class="is-hidden" id="bad_user">Tento uživatel se v doméně nenachází</p>
                <p class="is-hidden" id="no_creds">Vyplňte přihlašovací údaje</p>
            </div>
            <div class="column is-narrow">
               <button class="button is-primary" id="domains_login">OK</button>
            </div>
            <div class="column is-narrow">
                 &nbsp; &nbsp;<button class="button">Storno</button>
            </div>
        </div>
        ';
        $this->get_window("main")->set_contents($contents);
        $this->endpoint->javascript("ssoauth", $this->get_runtime_javascript(), $this->pid);
    }

    private function get_login_window_welcome($name): void
    {
        $contents = $this->get_login_header();
        $contents .= '<div style="height:10px"></div>
        <div class="columns is-centered is-gapless is-marginless is-vcentered">
            <div class="column is-half">Vítejte, '.$name.'</div>
            <div class="column is-one-quarter">
                
            </div>
        </div>
        ';
        $this->get_window("main")->set_contents($contents);
    }

    private function get_login_header() : String
    {
        return "<img src='https://cdn.vespotok.net/img/fujin-hanok-domains.png'>";
    }


    private function get_basic_ui_elements(): string
    {
        return "<div class='rj_topbar authd is-hidden-mobile'>
    <div class='columns menubar is-mobile is-vcentered'>

        <div class='column is-narrow animate__animated animate__fadeInDown '>
            <span id='focusApp' class='rj_t_color'>

            </span>&nbsp;&nbsp;<i class='fas fa-cog fa-spin loading-icon '></i>
        </div>
        <div class='column'></div>
        <div class='column  is-hidden-mobile is-narrow animate__animated animate__fadeInDown '>
            <div class='dropdown is-hoverable is-right'>
                <div class='dropdown-trigger'>
                    <a class='has-text-white rj_t_color' aria-haspopup='true' aria-controls='dropdown-menu6'>
                        <i class='fas fa-desktop rj_t_color' id='session_selector'></i>
                        <span class='icon is-small'>
                            <i class='fas fa-angle-down' aria-hidden='true'></i>
                        </span>
                    </a>
                </div>

                <div class='dropdown-menu' id='dropdown-menu6' role='menu'>
                    <div class='dropdown-content'>
                    </div>
                </div>
            </div>
        </div>

        <div class='column is-narrow animate__animated animate__fadeInDown '><span class='rj_t_date  rj_t_color'></span><span class='rj_t_clock  rj_t_color'></span></div>
        </div>
        </div>
        <div class='fujin_remorker'>
            <p class='fr_1'>
                " . $_SESSION["fjx_ver"]->uname . " " . $_SESSION["fjx_ver"]->ver_major . "." . $_SESSION["fjx_ver"]->ver_minor
                . "</p>
            <p class='fr_2'>" . $_SESSION["fjx_ver"]->ver_codename .
                "</p>
        </div>";
    }

    private function get_runtime_javascript():string
    {
        $script = '
        var domainname = "";

        setTimeout(function(){
            $("#domains_username").ready(function(){
                setTimeout(function(){
                    $( "#domains_username" ).focusout(function() {
                        if($( "#domains_username" ).val()!="")
                            loadDomainFromUsername($( "#domains_username" ).val());
                    });
                    $( "#domains_login" ).click(function() {
                        $("#no_creds").addClass("is-hidden");

                        if($( "#domains_username" ).val()!="" && $("#domains_password" ).val()!="" )
                            tryLoginDomain();
                        else
                            $("#no_creds").remosveClass("is-hidden");

                    });
                },500);
            });
        },500);

        function loadDomainFromUsername(username)
        {
            $("#no_creds").addClass("is-hidden");
            $("#bad_user").addClass("is-hidden");
            $("#bad_password").addClass("is-hidden");
            $("#not_existing_domain").addClass("is-hidden");

            call_async("check_username("+username+")", "fn", false, function(data) {
                
                var dataarray = JSON.parse(data);
                if(dataarray.status == "success")
                {
                    if(dataarray.user.name != null || dataarray.user.name != undefined)
                    {
                        $("#domains_domainname").val(dataarray.domain.samDomainName+ " ("+dataarray.domain.domainName+")");
                        domainname = dataarray.domain.domainName;
                    }
                    else
                    {
                        $("#domains_domainname").val("");
                        $("#bad_user").removeClass("is-hidden");
                    }
                }
                else
                {
                    $("#domains_domainname").val("");
                    $("#not_existing_domain").removeClass("is-hidden");
                }

            }, '.$this->pid. ', false);
        }

        function tryLoginDomain()
        {
            $("#bad_password").addClass("is-hidden");

            call_async("try_login("+$( "#domains_username" ).val()+","+$( "#domains_password" ).val()+","+domainname+")", "fn", true, function(data) {
                
                var dataarray = JSON.parse(data);
                if(dataarray.status == "success")
                {
                    '.$this->get_window("main")->window_id. '.changeOption("size", {width:600, height:200});
                    setTimeout(function(){
                        call_async("login("+dataarray.token+","+domainname+")", "fn", true, function(data) {  }, ' . $this->pid . ', false);
                    },1500);
                }
                else
                {
                    $("#bad_password").removeClass("is-hidden");
                }

            }, ' . $this->pid . ', false);
        }
        /** '.rand(100,888).' */';
        return $script;
    }
}